# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# brand routes
GET           /v1/brands/suggestions                                     org.opencommercesearch.api.controllers.BrandController.findSuggestions(version: Int = 1, q: String, preview: Boolean ?= false)
GET           /v1/brands/:id                                             org.opencommercesearch.api.controllers.BrandController.findById(version: Int = 1, id: String, preview: Boolean ?= false)
GET           /v1/brands                                                 org.opencommercesearch.api.controllers.BrandController.findAll(version: Int = 1, preview: Boolean ?= false, site: String)
PUT           /v1/brands/:id                                             org.opencommercesearch.api.controllers.BrandController.createOrUpdate(version: Int = 1, id: String, preview: Boolean ?= false)
PUT           /v1/brands                                                 org.opencommercesearch.api.controllers.BrandController.bulkCreateOrUpdate(version: Int = 1, preview: Boolean ?= false)
DELETE        /v1/brands                                                 org.opencommercesearch.api.controllers.BrandController.deleteByTimestamp(preview: Boolean ?= false, feedTimestamp: Long)

# product routes
GET           /v1/products/suggestions                                   org.opencommercesearch.api.controllers.ProductController.findSuggestions(version: Int = 1, q: String, preview: Boolean ?= false)
GET           /v1/products                                               org.opencommercesearch.api.controllers.ProductController.search(version: Int = 1, q: String, site: String, preview: Boolean ?= false)
GET           /v1/products/:id                                           org.opencommercesearch.api.controllers.ProductController.findById(version: Int = 1, id: String, site: String ?= null, preview: Boolean ?= false)
GET           /v1/categories/:id/products                                org.opencommercesearch.api.controllers.ProductController.browse(version: Int = 1, site: String, id: String, q: String ?= null, closeout: Boolean ?= false, preview: Boolean ?= false)
GET           /v1/brands/:brandId/products                               org.opencommercesearch.api.controllers.ProductController.browseBrand(version: Int = 1, site: String, brandId: String, preview: Boolean ?= false)
GET           /v1/brands/:brandId/categories/:categoryId/products        org.opencommercesearch.api.controllers.ProductController.browseBrandCategory(version: Int = 1, site: String, brandId: String, categoryId: String, preview: Boolean ?= false)
PUT           /v1/products                                               org.opencommercesearch.api.controllers.ProductController.bulkCreateOrUpdate(version: Int = 1, preview: Boolean ?= false)
DELETE        /v1/products                                               org.opencommercesearch.api.controllers.ProductController.deleteByTimestamp(version: Int = 1, feedTimestamp: Long, preview: Boolean ?= false)
DELETE        /v1/products/:id                                           org.opencommercesearch.api.controllers.ProductController.deleteById(version: Int = 1, id: String, preview: Boolean ?= false)

# category routes
GET           /v1/categories/suggestions                                 org.opencommercesearch.api.controllers.CategoryController.findSuggestions(version: Int = 1, q: String, site: String, preview: Boolean ?= false)
GET           /v1/categories/:id                                         org.opencommercesearch.api.controllers.CategoryController.findById(version: Int = 1, id: String, preview: Boolean ?= false)
PUT           /v1/categories                                             org.opencommercesearch.api.controllers.CategoryController.bulkCreateOrUpdate(version: Int = 1, preview: Boolean ?= false)
DELETE        /v1/categories                                             org.opencommercesearch.api.controllers.CategoryController.deleteByTimestamp(version: Int = 1, feedTimestamp: Long, preview: Boolean ?= false)
GET           /v1/categories/:id/brands                                  org.opencommercesearch.api.controllers.CategoryController.findBrandsByCategoryId(version: Int = 1, id: String, preview: Boolean ?= false, facetLimit: Int ?= 50)

# query routes
GET           /v1/queries/suggestions                                    org.opencommercesearch.api.controllers.QueryController.findSuggestions(version: Int = 1, q: String, site: String, preview: Boolean ?= false)

# rule routes
GET           /v1/rules/:id                                              org.opencommercesearch.api.controllers.RuleController.findById(version: Int = 1, id: String, preview: Boolean ?= false)
PUT           /v1/rules/:id                                              org.opencommercesearch.api.controllers.RuleController.createOrUpdate(version: Int = 1, id: String, preview: Boolean ?= false)
PUT           /v1/rules                                                  org.opencommercesearch.api.controllers.RuleController.bulkCreateOrUpdate(version: Int = 1, preview: Boolean ?= false)
POST          /v1/rules/commit                                           org.opencommercesearch.api.controllers.RuleController.commitOrRollback(preview: Boolean ?= false, commit: Boolean = true, rollback: Boolean = false)
POST          /v1/rules/rollback                                         org.opencommercesearch.api.controllers.RuleController.commitOrRollback(preview: Boolean ?= false, commit: Boolean = false, rollback: Boolean = true)
DELETE        /v1/rules                                                  org.opencommercesearch.api.controllers.RuleController.deleteByQuery(preview: Boolean ?= false, query: String ?= "*:*")

# facet routes
GET           /v1/facets/:id                                             org.opencommercesearch.api.controllers.FacetController.findById(version: Int = 1, id: String, preview: Boolean ?= false)
PUT           /v1/facets/:id                                             org.opencommercesearch.api.controllers.FacetController.createOrUpdate(version: Int = 1, id: String, preview: Boolean ?= false)
PUT           /v1/facets                                                 org.opencommercesearch.api.controllers.FacetController.bulkCreateOrUpdate(version: Int = 1, preview: Boolean ?= false)
POST          /v1/facets/commit                                          org.opencommercesearch.api.controllers.FacetController.commitOrRollback(preview: Boolean ?= false, commit: Boolean = true, rollback: Boolean = false)
POST          /v1/facets/rollback                                        org.opencommercesearch.api.controllers.FacetController.commitOrRollback(preview: Boolean ?= false, commit: Boolean = false, rollback: Boolean = true)
DELETE        /v1/facets                                                 org.opencommercesearch.api.controllers.FacetController.deleteByQuery(preview: Boolean ?= false, query: String ?= "*:*")

# docs
GET           /api-docs                                                  org.opencommercesearch.api.controllers.ApiDocController.index
GET           /api-docs/                                                 controllers.ApiHelpController.getResources
GET           /api-docs/categories                                       controllers.ApiHelpController.getResource(path = "categories")
GET           /api-docs/brands                                           controllers.ApiHelpController.getResource(path = "brands")
GET           /api-docs/products                                         controllers.ApiHelpController.getResource(path = "products")
GET           /api-docs/queries                                          controllers.ApiHelpController.getResource(path = "queries")

GET           /images/*file                                              controllers.Assets.at(path="/public/images", file)
GET           /assets/*file                                              controllers.Assets.at(path="/public", file)

# info

GET           /v1/info                                                   org.opencommercesearch.api.controllers.ApiInfoController.getInfo











